---

# project information
project_name: flexget
project_url: "http://flexget.com/"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/flexget-banner.png"
project_blurb: "[{{ project_name|capitalize }}]({{ project_url }}) is a multipurpose automation tool for all of your media."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_categories: "Downloaders"
# supported architectures
available_architectures:
  - {arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - {arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_env: true
param_env_vars:
  - {env_var: "FG_LOG_LEVEL", env_value: "info", desc: "Set the FlexGet logging level."}
  - {env_var: "FG_LOG_FILE", env_value: "/config/flexget.log", desc: "Set the FlexGet log file location."}
  - {env_var: "FG_CONFIG_FILE", env_value: "/config/.flexget/config.yml", desc: "Set the FlexGet config file location."}
param_usage_include_vols: true
param_volumes:
  - {vol_path: "/config", vol_host_path: "/path/to/{{ project_name }}/data", desc: "Local path for FlexGet config files."}
param_usage_include_ports: true
param_ports:
  - {external_port: "5050", internal_port: "5050", port_desc: "HTTP port for the WebUI."}
# optional container parameters
opt_param_usage_include_env: true
opt_param_env_vars:
  - {env_var: "FG_WEBUI_PASSWORD", env_value: "info", desc: "Set the FlexGet webui password. Pay attention to Bash/YAML reserved characters."}
opt_param_usage_include_vols: true
opt_param_volumes:
  - {vol_path: "/data", vol_host_path: "/path/to/downloads", desc: "Default path for downloads."}
readonly_supported: true
# application setup block
app_setup_block_enabled: true
app_setup_block: |
  Default config file is /config/.flexget

  See the [FlexGet website](https://flexget.com/) for more information.

  ### Download folders

  We have set `/data` as an ***optional path***, this is because it is the easiest way to get started.

  Use the optional paths if you don't understand, or don't want hardlinks/atomic moves.
# init diagram
init_diagram: |
  "flexget:latest": {
    docker-mods
    base {
      fix-attr +\nlegacy cont-init
    }
    docker-mods -> base
    legacy-services
    custom services
    init-services -> legacy-services
    init-services -> custom services
    custom services -> legacy-services
    legacy-services -> ci-service-check
    init-migrations -> init-adduser
    init-os-end -> init-config
    init-config -> init-config-end
    init-flexget-config -> init-config-end
    init-os-end -> init-crontab-config
    init-mods-end -> init-custom-files
    init-adduser -> init-device-perms
    base -> init-envfile
    init-config -> init-flexget-config
    base -> init-migrations
    base -> init-mods
    init-config-end -> init-mods
    init-mods -> init-mods-end
    init-mods-package-install -> init-mods-end
    init-mods -> init-mods-package-install
    base -> init-os-end
    init-adduser -> init-os-end
    init-device-perms -> init-os-end
    init-envfile -> init-os-end
    init-migrations -> init-os-end
    init-custom-files -> init-services
    init-mods-end -> init-services
    init-services -> svc-cron
    svc-cron -> legacy-services
    init-services -> svc-flexget
    svc-flexget -> legacy-services
  }
  Base Images: {
    "baseimage-alpine:3.19"
  }
  "flexget:latest" <- Base Images
# changelog
changelogs:
  - {date: "17.10.25:", desc: "Add pip to enable [universal-package-install mod](https://github.com/linuxserver/docker-mods/tree/universal-package-install)."}
  - {date: "18.09.24:", desc: "Suppress creation of empty log file when WebUI password is set."}
  - {date: "17.08.24:", desc: "Revert to Alpine 3.20 due to 1st party plugin incompatibility with Python 3.12."}
  - {date: "19.06.24:", desc: "Rebase to Alpine 3.20."}
  - {date: "20.03.24:", desc: "Rebase to Alpine 3.19."}
  - {date: "07.10.23:", desc: "Install unrar from [linuxserver repo](https://github.com/linuxserver/docker-unrar)."}
  - {date: "10.08.23:", desc: "Bump unrar to 6.2.10."}
  - {date: "03.07.23:", desc: "Initial Release."}
