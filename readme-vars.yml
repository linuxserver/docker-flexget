---

# project information
project_name: flexget
project_url: "http://flexget.com/"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/flexget-banner.png"
project_blurb: "[{{ project_name|capitalize }}]({{ project_url }}) is a multipurpose automation tool for all of your media."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_blurb_optional_extras_enabled: false

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}

# development version
development_versions: false

# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_env: true
param_env_vars:
  - { env_var: "FG_LOG_LEVEL", env_value: "info", desc: "Set the FlexGet logging level." }
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "/path/to/data", desc: "Local path for sabnzbd config files." }
param_usage_include_ports: true
param_ports:
  - { external_port: "5050", internal_port: "5050", port_desc: "HTTP port for the WebUI." }

# optional container parameters
opt_param_usage_include_env: true
opt_param_env_vars:
  - { env_var: "FG_WEBUI_PASSWORD", env_value: "info", desc: "Set the FlexGet webui password. Pay attention to Bash/YAML reserved characters." }

opt_param_usage_include_vols: true
opt_param_volumes:
  - { vol_path: "/data", vol_host_path: "/path/to/downloads", desc: "Default path for downloads." }

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  Default config file is /config/.flexget

  See the [FlexGet website](https://flexget.com/) for more information.

  ### Download folders

  We have set `/data` as an ***optional path***, this is because it is the easiest way to get started. While easy to use, it has some drawbacks. Mainly losing the ability to hardlink (TL;DR a way for a file to exist in multiple places on the same file system while only consuming one file worth of space), or atomic move (TL;DR instant file moves, rather than copy+delete) files while processing content.

  Use the optional paths if you dont understand, or dont want hardlinks/atomic moves. 

  The folks over at servarr.com wrote a good [write-up](https://wiki.servarr.com/docker-guide#consistent-and-well-planned-paths) on how to get started with this.

# changelog
changelogs:
  - { date: "03.07.23:", desc: "Initial Release." }
